@use 'sass:math';

// font-family
$font-sans: '游明朝体', 'Yu Mincho', YuMincho, 'ヒラギノ明朝 Pro', 'Hiragino Mincho Pro', 'MS P明朝', 'MS PMincho', serif;

// color カラー変数名定義（最初の2桁を変数名の一番後ろに追加）
$color-main: #241717;

// opacity
$opacity: .7;

// PC：ホバーで透過する
@mixin hover() {
  @include pc() {
    -webkit-transition: all .3s ease;
    transition: all .3s ease;
    &:hover {
      opacity: $opacity;
    }
  }
}

// screen
@mixin pc() {
  @media screen and (min-width: 768px) {
    @content;
  }
}

@mixin tbl() {
  @media screen and (min-width: 768px) and (max-width: 1023px) {
    @content;
  }
}

@mixin sp() {
  @media screen and (max-width: 767px) {
    @content;
  }
}

// pxからvwに変換する
@function vw($n) {
  @return decimal-round((math.div($n, 375) * 100), 3) + vw;
}

@function decimal-round ($number, $digits: 0, $mode: round) {
  $n: 1;
  // $number must be a number
  @if type-of($number) != number {
      @warn '#{ $number } is not a number.';
      @return $number;
  }
  // $digits must be a unitless number
  @if type-of($digits) != number {
      @warn '#{ $digits } is not a number.';
      @return $number;
  } @else if not unitless($digits) {
      @warn '#{ $digits } has a unit.';
      @return $number;
  }
  @if $digits > 0 {
      @for $i from 1 through $digits {
          $n: $n * 10;
      }
  }
  @if $mode == round {
      @return math.div(round($number * $n), $n);
  } @else if $mode == ceil {
      @return math.div(ceil($number * $n), $n);
  } @else if $mode == floor {
      @return math.div(floor($number * $n), $n);
  } @else {
      @warn '#{ $mode } is undefined keyword.';
      @return $number;
  }
}
